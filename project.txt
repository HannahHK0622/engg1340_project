Game: Super Tik Tak Toe
Mechanics:
-	9 regular ttt boards in a ttt pattern
-	First player chooses any board to play in
-	Next play must be in the square last played in in the game (e.g. if boards[1][0] is played, then play boards[0])
-	Winner of one subgame claims that subgame
-	TTT rules apply for “claimed” subgames to win

//playerMove = {board, row, col}
int* takePlay(int* &playerMove){
    int board, row, col;
    board = playerMove[0];
    int playerMove[] = {board, row, col};
    //logic the `board` variable
    //If first game, or if previous chosen game is won/tied, ask for board
    cin >> 
    //Otherwise output f"The board is {playerMove[0]}"
    //Ask for row col in space-sep values
    getline();
    //getline something idk
    return playerMove;
}

int playerMove[] = takePlay(&playerMove);
//Take player input
vector<int*> game = placePlay(vector<int*>* game, const int* &playerMove);
//Place the playerinput on the game
void format(&game);
//Format the game and print it
int checkWin(&game);
//Check winner/tie for both the subgames, and the main game
